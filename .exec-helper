commands:
    init: Initialize the build infrastructure
    build: Build-only + install the project
    build-only: Build the project binaries for the given MODE, COMPILER and TRIPLET
    install: Install the project binaries for the given MODE, COMPILER and TRIPLET
    build-env: Build the virtual build environment for the given ARCHITECTURE
    venv: Run the given COMMANDs in the virtual environment
    dev-console: Open a development console in the virtual environment
    language-server: Run the language server for this project in the virtual environment
    lang-serv: Run the language server in the host environment

init:
    - create-toolchain-file
    - meson

build:
    - install   # Install will automatically build missing parts

build-env:
    - command-line-command

venv:
    - docker

dev-console:
    - docker

language-server:
    - docker

create-toolchain-file:
    - command-line-command

build-only:
    - meson

install:
    - meson

lang-serv:
    - command-line-command

patterns:
    COMPILER:
        default-values:
            - gcc
            #- clang
        short-option: c
        long-option: compiler

    MODE:
        default-values:
            #- debug
            - release
        short-option: m
        long-option: mode

    TRIPLET:
        default-values:
            - ""
            #- arm-linux-gnueabihf-
        long-option: triplet

    ARCHITECTURE:
        default-values:
            - x86_64
            #- raspbian
        long-option: arch
        short-option: a

    SYSROOT:
        default-values:
            - /
            #- /opt/sysroot/raspbian
        long-option: sysroot

    COMMAND:
        default-values:
            - build
        short-option: b
        long-option: cmd

meson:
    patterns:
        - COMPILER
        - TRIPLET
        - MODE
        - EH_ROOT_DIR

    source-dir: .
    build-dir: "build/{TRIPLET}{COMPILER}/{MODE}/build"
    build-type: "{MODE}"
    prefix: "{EH_ROOT_DIR}/build/{TRIPLET}{COMPILER}/{MODE}/install"
    cross-file: "build/{TRIPLET}{COMPILER}/{MODE}/cross-file.ini"

    mode: setup

    environment:
        BOOST_ROOT: "{SYSROOT}/usr"

    init:
        options:
            systemd: enabled
            systemd-prefix: "{EH_ROOT_DIR}/build/{TRIPLET}{COMPILER}/{MODE}/install/lib/systemd/system"
            license-prefix: "{EH_ROOT_DIR}/build/{TRIPLET}{COMPILER}/{MODE}/install/share/exec-helper"
        command-line: [--werror]

    build-only:
        mode: compile

    install:
        mode: install
        command-line: [--only-changed]

docker:
    patterns:
        - COMMAND
        - ARCHITECTURE
        - EH_ROOT_DIR

    image: "open-monitor/dev:{ARCHITECTURE}"
    mode: run
    #container: open-monitor-dev
    interactive: yes
    tty: no
    volumes:
        - "{EH_ROOT_DIR}:{EH_ROOT_DIR}:ro"
        - "{EH_ROOT_DIR}/build:{EH_ROOT_DIR}/build:rw"
        - "{EH_ROOT_DIR}/subprojects:{EH_ROOT_DIR}/subprojects:rw"

    command-line: ['--rm', '--workdir={EH_ROOT_DIR}']

    venv:
        targets: "{COMMAND}"

    dev-console:
        tty: yes
        command-line: ['--rm', '--workdir={EH_ROOT_DIR}', '--name=open-monitor-{ARCHITECTURE}']
        command: bash

    language-server:
        targets: lang-serv

command-line-command:
    build-env:
        patterns:
            - ARCHITECTURE
        command-line: [ docker, build, "--tag=open-monitor/dev:{ARCHITECTURE}", "docker/build/{ARCHITECTURE}"]

    create-toolchain-file:
        patterns:
            - COMPILER
            - TRIPLET
            - ARCHITECTURE
            - SYSROOT
            - MODE
        command-line:
            - create-build-dir: [ mkdir, -p, "build/{TRIPLET}{COMPILER}/{MODE}"]
            - remove-toolchain-tmp: [ rm, -f, "build/{TRIPLET}{COMPILER}/{MODE}/cross-file.ini"]
            - create-toolchain-tmp: [ cp, "crossfiles/{COMPILER}.ini.in", "build/{TRIPLET}{COMPILER}/{MODE}/cross-file.ini"]
            - replace-triplet: [ sed, -i, 's%@TRIPLET@%{TRIPLET}%g', "build/{TRIPLET}{COMPILER}/{MODE}/cross-file.ini"]
            - replace-compiler-family: [ sed, -i, 's%@COMPILER_FAMILY@%{COMPILER}%g', "build/{TRIPLET}{COMPILER}/{MODE}/cross-file.ini"]
            - replace-sysroot: [ sed, -i, 's%@SYSROOT@%{SYSROOT}%g', "build/{TRIPLET}{COMPILER}/{MODE}/cross-file.ini"]
            - replace-arch: [ sed, -i, 's%@ARCHITECTURE@%{ARCHITECTURE}%g', "build/{TRIPLET}{COMPILER}/{MODE}/cross-file.ini"]

    lang-serv:
        patterns:
            - COMPILER
            - TRIPLET
            - MODE
        command-line: [clangd, "--compile-commands-dir=build/{TRIPLET}{COMPILER}/{MODE}/build"]
